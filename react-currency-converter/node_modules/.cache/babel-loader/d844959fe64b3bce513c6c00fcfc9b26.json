{"ast":null,"code":"var _jsxFileName = \"/Users/lanefoxwood/Desktop/freeCodeCamp/FrontEndDevelopmentLibraries2022/react-currency-converter/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport CurrencyRow from \"./CurrencyRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'https://api.exchangerate.host/latest';\n\nfunction App() {\n  _s();\n\n  const [currencyOptions, setCurrencyOptions] = useState([]);\n  const [fromCurrency, setFromCurrency] = useState();\n  const [toCurrency, setToCurrency] = useState();\n  const [exchangeRate, setExchangeRate] = useState();\n  const [amount, setAmount] = useState(1);\n  const [amountInFromCurrency, setAmountInFromCurrecny] = useState(true);\n  console.log(exchangeRate);\n  useEffect(() => {\n    fetch(BASE_URL).then(res => res.json()).then(data => {\n      const firstCurrency = Object.keys(data.rates)[0];\n      setCurrencyOptions([...Object.keys(data.rates)]);\n      setFromCurrency(data.base);\n      setToCurrency(firstCurrency);\n      setExchangeRate(data.rates[firstCurrency]);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Convert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrencyRow, {\n      currencyOptions: currencyOptions,\n      selectedCurrency: fromCurrency,\n      onChangeCurrency: e => setFromCurrency(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"equals\",\n      children: \"=\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrencyRow, {\n      currencyOptions: currencyOptions,\n      selectedCurrency: toCurrency,\n      onChangeCurrency: e => setToCurrency(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"dIC4v/qK49uNJNLmpc78E/lQE9k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","CurrencyRow","BASE_URL","App","currencyOptions","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","amount","setAmount","amountInFromCurrency","setAmountInFromCurrecny","console","log","fetch","then","res","json","data","firstCurrency","Object","keys","rates","base","e","target","value"],"sources":["/Users/lanefoxwood/Desktop/freeCodeCamp/FrontEndDevelopmentLibraries2022/react-currency-converter/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport './App.css';\nimport CurrencyRow from \"./CurrencyRow\";\n\nconst BASE_URL = 'https://api.exchangerate.host/latest'\n\n\n\n\nfunction App() {\nconst [currencyOptions, setCurrencyOptions] = useState([])\nconst [fromCurrency, setFromCurrency] = useState()\nconst [toCurrency, setToCurrency] = useState()\nconst [exchangeRate, setExchangeRate] = useState()\nconst [amount, setAmount] = useState(1)\nconst [amountInFromCurrency, setAmountInFromCurrecny] = useState(true)\nconsole.log(exchangeRate)\n\n\n  useEffect(() => {\n    fetch(BASE_URL)\n      .then(res => res.json())\n      .then(data => {\n        const firstCurrency = Object.keys(data.rates)[0]\n        setCurrencyOptions([...Object.keys(data.rates)])\n        setFromCurrency(data.base)\n        setToCurrency(firstCurrency)\n        setExchangeRate(data.rates[firstCurrency])\n      })\n  }, [])\n  return (\n    <>\n      <h1>Convert</h1>\n      <CurrencyRow \n      currencyOptions={currencyOptions}\n      selectedCurrency={fromCurrency}\n      onChangeCurrency={e => setFromCurrency(e.target.value)}\n      />\n      <div className=\"equals\">=</div>\n      <CurrencyRow \n      currencyOptions={currencyOptions}\n      selectedCurrency={toCurrency}\n      onChangeCurrency={e => setToCurrency(e.target.value)}\n      />\n    </>\n\n  );\n}\n\nexport default App;\n\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,QAAQ,GAAG,sCAAjB;;AAKA,SAASC,GAAT,GAAe;EAAA;;EACf,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCL,QAAQ,CAAC,EAAD,CAAtD;EACA,MAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,EAAhD;EACA,MAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,EAA5C;EACA,MAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,EAAhD;EACA,MAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,CAAD,CAApC;EACA,MAAM,CAACc,oBAAD,EAAuBC,uBAAvB,IAAkDf,QAAQ,CAAC,IAAD,CAAhE;EACAgB,OAAO,CAACC,GAAR,CAAYP,YAAZ;EAGEX,SAAS,CAAC,MAAM;IACdmB,KAAK,CAAChB,QAAD,CAAL,CACGiB,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAI;MACZ,MAAMC,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAYH,IAAI,CAACI,KAAjB,EAAwB,CAAxB,CAAtB;MACArB,kBAAkB,CAAC,CAAC,GAAGmB,MAAM,CAACC,IAAP,CAAYH,IAAI,CAACI,KAAjB,CAAJ,CAAD,CAAlB;MACAnB,eAAe,CAACe,IAAI,CAACK,IAAN,CAAf;MACAlB,aAAa,CAACc,aAAD,CAAb;MACAZ,eAAe,CAACW,IAAI,CAACI,KAAL,CAAWH,aAAX,CAAD,CAAf;IACD,CARH;EASD,CAVQ,EAUN,EAVM,CAAT;EAWA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,WAAD;MACA,eAAe,EAAEnB,eADjB;MAEA,gBAAgB,EAAEE,YAFlB;MAGA,gBAAgB,EAAEsB,CAAC,IAAIrB,eAAe,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV;IAHtC;MAAA;MAAA;MAAA;IAAA,QAFF,eAOE;MAAK,SAAS,EAAC,QAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAPF,eAQE,QAAC,WAAD;MACA,eAAe,EAAE1B,eADjB;MAEA,gBAAgB,EAAEI,UAFlB;MAGA,gBAAgB,EAAEoB,CAAC,IAAInB,aAAa,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV;IAHpC;MAAA;MAAA;MAAA;IAAA,QARF;EAAA,gBADF;AAiBD;;GAtCQ3B,G;;KAAAA,G;AAwCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}