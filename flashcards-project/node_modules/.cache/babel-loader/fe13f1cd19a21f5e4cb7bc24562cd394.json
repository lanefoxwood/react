{"ast":null,"code":"import _toConsumableArray from\"/Users/lanefoxwood/Desktop/freeCodeCamp/FrontEndDevelopmentLibraries2022/flashcard-project/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/lanefoxwood/Desktop/freeCodeCamp/FrontEndDevelopmentLibraries2022/flashcard-project/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect,useRef}from'react';import FlashcardList from'./FlashcardList';import\"./app.css\";import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),flashcards=_useState2[0],setFlashcards=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),categories=_useState4[0],setCategories=_useState4[1];var categoryEl=useRef();var amountEl=useRef();useEffect(function(){axios.get('https://opentdb.com/api_category.php').then(function(res){setCategories(res.data.trivia_categories);});},[]);useEffect(function(){},[]);function decodeString(str){var textArea=document.createElement('textarea');textArea.innerHTML=str;return textArea.value;}function handleSubmit(e){e.preventDefault();axios.get('https://opentdb.com/api.php',{params:{amount:amountEl.current.value,category:categoryEl.current.value}}).then(function(res){setFlashcards(res.data.results.map(function(questionItem,index){var answer=decodeString(questionItem.correct_answer);var options=[].concat(_toConsumableArray(questionItem.incorrect_answers.map(function(a){return decodeString(a);})),[answer]);return{id:\"\".concat(index,\"-\").concat(Date.now()),question:decodeString(questionItem.question),answer:answer,options:options.sort(function(){return Math.random()-.5;})};}));});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"form\",{className:\"header\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"category\",children:\"Category\"}),/*#__PURE__*/_jsx(\"select\",{id:\"category\",ref:categoryEl,children:categories.map(function(category){return/*#__PURE__*/_jsx(\"option\",{value:category.id,children:category.name},category.id);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"amount\",children:\"Number of Questions\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"amount\",min:\"1\",step:\"1\",defaultValue:10,ref:amountEl})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn\",children:\"Generate\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(FlashcardList,{flashcards:flashcards})})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","FlashcardList","axios","App","flashcards","setFlashcards","categories","setCategories","categoryEl","amountEl","get","then","res","data","trivia_categories","decodeString","str","textArea","document","createElement","innerHTML","value","handleSubmit","e","preventDefault","params","amount","current","category","results","map","questionItem","index","answer","correct_answer","options","incorrect_answers","a","id","Date","now","question","sort","Math","random","name"],"sources":["/Users/lanefoxwood/Desktop/freeCodeCamp/FrontEndDevelopmentLibraries2022/flashcard-project/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport FlashcardList from './FlashcardList';\nimport \"./app.css\"\nimport axios from 'axios'\n\nfunction App() {\n  const [flashcards, setFlashcards] = useState([]);\n  const [categories, setCategories] = useState([])\n\n  const categoryEl = useRef()\n  const amountEl = useRef()\n\n  useEffect(() => {\n    axios.get('https://opentdb.com/api_category.php')\n      .then(res => {\n        setCategories(res.data.trivia_categories);\n      })\n  }, [])\n\n  useEffect(() => {\n    \n  }, [])\n\n\n  function decodeString(str) {\n    const textArea = document.createElement('textarea')\n    textArea.innerHTML = str;\n    return textArea.value\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    axios.get('https://opentdb.com/api.php', {\n      params: {\n        amount: amountEl.current.value,\n        category: categoryEl.current.value\n      }\n    })\n      .then(res => {\n        setFlashcards(res.data.results.map((questionItem, index) => {\n          const answer = decodeString(questionItem.correct_answer)\n          const options = [\n            ...questionItem.incorrect_answers.map(a => decodeString(a)),\n            answer\n          ]\n          return {\n            id: `${index}-${Date.now()}`,\n            question: decodeString(questionItem.question),\n            answer: answer,\n            options: options.sort(() => Math.random() - .5)\n          }\n        }))\n      })\n\n  }\n\n  return (\n    <>\n      <form className=\"header\" onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"category\">Category</label>\n          <select id=\"category\" ref={categoryEl}>\n            {categories.map(category => {\n              return <option value={category.id} key={category.id}>{category.name}</option>\n            })}\n\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"amount\">Number of Questions</label>\n          <input type=\"number\" id=\"amount\" min=\"1\" step=\"1\" defaultValue={10} ref={amountEl} />\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn\">Generate</button>\n        </div>\n      </form>\n      <div className=\"container\">\n        <FlashcardList flashcards={flashcards} />\n      </div>\n    </>\n\n\n  );\n}\n\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}