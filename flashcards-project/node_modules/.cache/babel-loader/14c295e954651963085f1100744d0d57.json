{"ast":null,"code":"var _jsxFileName = \"/Users/lanefoxwood/Desktop/freeCodeCamp/FrontEndDevelopmentLibraries2022/flashcard-project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport FlashcardList from './FlashcardList';\nimport \"./app.css\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [flashcards, setFlashcards] = useState(SAMPLE_FLASHCARDS);\n  const [categories, setCategories] = useState([]);\n  const categoryEl = useRef();\n  useEffect(() => {\n    axios.get('https://opentdb.com/api_category.php').then(res => {\n      setCategories(res.data.trivia_categories);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get('https://opentdb.com/api.php?amount=10').then(res => {\n      setFlashcards(res.data.results.map((questionItem, index) => {\n        const answer = decodeString(questionItem.correct_answer);\n        const options = [...questionItem.incorrect_answers.map(a => decodeString(a)), answer];\n        return {\n          id: `${index}-${Date.now()}`,\n          question: decodeString(questionItem.question),\n          answer: answer,\n          options: options.sort(() => Math.random() - .5)\n        };\n      }));\n    });\n  }, []);\n\n  function decodeString(str) {\n    const textArea = document.createElement('textarea');\n    textArea.innerHTML = str;\n    return textArea.value;\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"header\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"category\",\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"category\",\n          ref: categoryEl,\n          children: categories.map(category => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category.id,\n              children: category.name\n            }, category.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 18\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(FlashcardList, {\n        flashcards: flashcards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"e2TYMq8py4f+FOVRPcLjQIpUdAk=\");\n\n_c = App;\nconst SAMPLE_FLASHCARDS = [{\n  id: 1,\n  question: \"what is 2 + 2?\",\n  answer: \"4\",\n  options: [\"2\", \"3\", \"4\", \"5\"]\n}, {\n  id: 2,\n  question: \"Question 2?\",\n  answer: \"answer\",\n  options: [\"answer\", \"answer 1\", \"answer 2\", \"answer 3\"]\n}];\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FlashcardList","axios","App","flashcards","setFlashcards","SAMPLE_FLASHCARDS","categories","setCategories","categoryEl","get","then","res","data","trivia_categories","results","map","questionItem","index","answer","decodeString","correct_answer","options","incorrect_answers","a","id","Date","now","question","sort","Math","random","str","textArea","document","createElement","innerHTML","value","handleSubmit","e","preventDefault","category","name"],"sources":["/Users/lanefoxwood/Desktop/freeCodeCamp/FrontEndDevelopmentLibraries2022/flashcard-project/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport FlashcardList from './FlashcardList';\nimport \"./app.css\"\nimport axios from 'axios'\n\nfunction App() {\n  const [flashcards, setFlashcards] = useState(SAMPLE_FLASHCARDS);\n  const [categories, setCategories] = useState([])\n\n  const categoryEl = useRef()\n\n  useEffect(()=> {\n    axios.get('https://opentdb.com/api_category.php')\n    .then(res => {\n      setCategories(res.data.trivia_categories);\n    })\n  }, [])\n\n  useEffect(() => {\n    axios.get('https://opentdb.com/api.php?amount=10')\n      .then(res => {\n        setFlashcards(res.data.results.map((questionItem, index) => {\n          const answer = decodeString(questionItem.correct_answer)\n          const options = [\n            ...questionItem.incorrect_answers.map(a => decodeString(a)),\n            answer\n          ]\n          return {\n            id: `${index}-${Date.now()}`,\n            question: decodeString(questionItem.question),\n            answer: answer,\n            options: options.sort(() => Math.random() - .5)\n          }\n        }))\n      })\n  }, [])\n\n\n  function decodeString(str) {\n    const textArea = document.createElement('textarea')\n    textArea.innerHTML = str;\n    return textArea.value\n  }\n\n  function handleSubmit(e){\n    e.preventDefault()\n\n  }\n\n  return (\n    <>\n    <form className=\"header\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label htmlFor=\"category\">Category</label>\n        <select id=\"category\" ref={categoryEl}>\n        {categories.map(category => {\n          return <option value={category.id} key={category.id}>{category.name}</option>\n        })}\n  \n        </select>\n      </div>\n    </form>\n      <div className=\"container\">\n        <FlashcardList flashcards={flashcards} />\n      </div>\n    </>\n\n\n  );\n}\n\nconst SAMPLE_FLASHCARDS = [\n  {\n    id: 1,\n    question: \"what is 2 + 2?\",\n    answer: \"4\",\n    options: [\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\"\n    ]\n  },\n  {\n    id: 2,\n    question: \"Question 2?\",\n    answer: \"answer\",\n    options: [\n      \"answer\",\n      \"answer 1\",\n      \"answer 2\",\n      \"answer 3\"\n    ]\n  }\n]\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}